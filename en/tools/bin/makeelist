#!/usr/bin/perl -- # -*- Perl -*-

use strict;
use English;

my $class = shift @ARGV || undef;
my %hash = ();

opendir (DIR, "elements");
while (my $name = readdir(DIR)) {
    next if ! -f "elements/$name";
    next if $name !~ /\.fmt$/;

    open (F, "elements/$name");
    read (F, $_, -s "elements/$name");
    close (F);

    my $elem = $1 if /<refmiscinfo role=.element.>(.*?)</s;
    my $patn = $1 if /<refmiscinfo role=.pattern.>(.*?)</s;

    my @classes = /<refmiscinfo role=.class.>.*?<\/refmiscinfo>/g;
    my $match = (!@classes && !defined($class)) ? 1 : 0;
    foreach my $info (@classes) {
        $match = 1 if $info =~ />$class</;
        $match = 1 if $info =~ />publishers</ && (!defined($class) || $class eq 'publishers');
    }

    $hash{$name} = "$elem $patn" if $match;
}
closedir (DIR);

if ($class eq 'assembly') {
    print "<reference xml:id='ref-assembly'\n";
    print "           xmlns='http://docbook.org/ns/docbook'\n";
    print "           xmlns:xi='http://www.w3.org/2001/XInclude'>\n";
    print "<title>DocBook Assembly Element Reference</title>\n";
    print "<?dbhtml filename='ref-assembly.html'?>\n\n";

    print "<xi:include href='intro-assembly.xml'/>\n\n";
} elsif (!defined($class)) {
    print "<reference xml:id='ref-element'\n";
    print "           xmlns='http://docbook.org/ns/docbook'\n";
    print "           xmlns:xi='http://www.w3.org/2001/XInclude'>\n";

    print "<title>DocBook Element Reference</title>\n";
    print "<?dbhtml filename='ref-elements.html'?>\n\n";

    print "<xi:include href='intro-elements.xml'/>\n\n";
} else {
    print STDERR "Unexpected class: $class\n";
    exit 1;
}

foreach my $file (sort specialsort keys %hash) {
    my $name = $file;
    $name =~ s/^.*\/([^\/]+)$/$1/;
    print "<xi:include href='elements/$name'/>\n";
}

print "\n</reference>\n";

sub specialsort {
    my $ap = $hash{$a};
    my $bp = $hash{$b};

    if ($a =~ /^_any/ && $b !~ /^_any/) {
        return 1;
    }

    if ($a !~ /^_any/ && $b =~ /^_any/) {
        return -1;
    }

    if ("_$a" eq $b) {
        return -1;
    }

    if ("_$b" eq $a) {
        return 1;
    }

    return $ap cmp $bp;
}
